#!/usr/bin/env python

######################################################
# logs time, fahrenheit and humidity every 5 minutes
#
######################################################


import RPi.GPIO as io
import os
import time
import logging
import time

import commonCli
import HTU21DF




def main():
  cli = commonCli.CLI()
  cli.isRootOrDie()

  arguments = cli.getArguments()
  if not arguments:
    logPath = '/var/log/temperature/temp-humidity.log'
  else:
    logPath = arguments[0]

  setupLogging(logPath)

  while True:
    startTime = time.time()
    temp_fahrenheit = getTemperature()
    humidity = getHumidity()
    logging.info('%f\t%F', temp_fahrenheit, humidity)
    runningTime = time.time()- startTime
    time.sleep(300 - runningTime)

def setupLogging(logPath):
  logging.basicConfig(filename=logPath,level=logging.DEBUG,format='%(asctime)s\t%(message)s',datefmt='%Y-%m-%d %H:%M:%S')


def celcius_to_fahrenheit(celcius):
  return (celcius * 1.8) + 32


def median(x):
  m,r= divmod(len(x),2)
  if r:
    return sorted(x)[m]
  return sum(sorted(x)[m-1:m+1])/2

def getTemperature():
  tempList = []
  for x in range(100):
     HTU21DF.htu_reset
     tempList.append(
       celcius_to_fahrenheit(HTU21DF.read_temperature())
     )
  return median(tempList)

def getHumidity():
  tempList = []
  for x in range(100):
     HTU21DF.htu_reset
     tempList.append(HTU21DF.read_humidity())
  return median(tempList)

if __name__ == '__main__':
  main()
